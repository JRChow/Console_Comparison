install.packages("xlsx")
library(xlsx)
read.xlsx("Console.xlsx")
read.xlsx("Console.xlsx",sheetIndex = 1)
consoles <- read.xlsx("Console.xlsx",sheetIndex = 1)
View(consoles)
library(xlsx)
library(xlsx)
library(xlsx)
consoles <- read.xlsx("Console.xlsx",sheetIndex = 1)
View(consoles)
?read.xlsx
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
View(consoles)
colnames(consoles)
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
View(consoles)
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
View(consoles)
View(consoles)
?sapply
?min
sapply(consoles, function(x) (x-min(x))/(max(x)-min(x)))
typeof(consoles$Price)
typeof(consoles$Memory_Type)
sapply(consoles, function(x) if (!is.factor(x)) {((x-min(x))/(max(x)-min(x))})
sapply(consoles, function(x) if (!is.factor(x)) ((x-min(x))/(max(x)-min(x)))
a
sapply(consoles, function(x) if (!is.factor(x)) ((x-min(x))/(max(x)-min(x))))
norm_consoles <- sapply(consoles, function(x) if (!is.factor(x)) ((x-min(x))/(max(x)-min(x))))
norm_consoles <- as.data.frame(sapply(consoles, function(x) if (!is.factor(x)) ((x-min(x))/(max(x)-min(x)))))
norm_consoles <- sapply(consoles, function(x) if (is.factor(x)) (x-min(x))/(max(x)-min(x)))
norm_consoles <- sapply(consoles, function(x) if (!is.factor(x)) (x-min(x))/(max(x)-min(x)))
norm_consoles <- sapply(consoles, function(x) if (is.factor(x)) x else (x-min(x))/(max(x)-min(x)))
View(norm_consoles)
View(norm_consoles)
norm_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-min(x))/(max(x)-min(x)))
View(norm_consoles)
?avg
?average
norm_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
View(std_consoles)
write.csv(std_consoles, file = "Console_Std.csv")
View(std_consoles)
colnames(std_consoles) == "Type."
colnames(std_consoles)[colnames(std_consoles) == "Type."]
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
View(std_consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
write.csv(std_consoles, file = "Console_Std.csv")
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
library(xlsx)
View(std_consoles)
colnames(std_consoles)
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
View(std_consoles)
summary(std_consoles)
str(std_consoles)
sapply(std_consoles, function(x) is.numeric(x))
sapply(std_consoles, function(x) is.numeric(x))
sapply(std_consoles, function(x) is.factor(x))
sapply(std_consoles, function(x) is.character(x))
str(std_consoles)
std_consoles <- as.data.frame(std_consoles)
View(std_consoles)
std_consoles <- as.data.frame(std_consoles)
sapply(std_consoles, function(x) is.character(x))
sapply(std_consoles, function(x) is.numeric(x))
str(std_consoles)
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else as.double(x-mean(x))/(max(x)-min(x)))
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else as.double(x-mean(x))/(max(x)-min(x)))
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
std_consoles <- as.data.frame(std_consoles)
str(std_consoles)
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
str(std_consoles)
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
View(std_consoles)
str(std_consoles)
View(std_consoles)
View(norm_consoles)
View(std_consoles)
View(std_consoles)
std_consoles <- sapply(consoles, function(x) class)
sapply(consoles, function(x) class)
sapply(consoles, function(x) class)
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
std_consoles <- as.data.frame(std_consoles)
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
std_consoles <- as.data.frame(std_consoles)
View(norm_consoles)
std_consoles <- sapply(consoles, function(x) if (is.factor(x)) as.character(x) else (x-mean(x))/(max(x)-min(x)))
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles[1]
std_consoles[2]
std_consoles[3]
std_consoles[4]
std_consoles[5]
std_consoles[6]
?sapply
?colwise
??colwise
install.packages("plyr")
?colwose
?colwise
??colwise
std_consoles <- col
library(plyr)
std_consoles <- colwise(std_func)(consoles)
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
library(plyr)
std_consoles <- colwise(std_func)(consoles)
View(std_consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
sapply(std_consoles, function(x) is.numeric(x))
sapply(std_consoles, function(x) if(is.numeric(x)) print(x))
sapply(std_consoles, function(x) if(is.numeric(x) ) print(names(x)))
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
library(plyr)
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
library(plyr)
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
library(plyr)
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
colnames(consoles) != "Price"
consoles[,colnames(consoles) != "Price"]
consoles[,colnames(consoles) != "Price"]
isNumeric <- colwise(is.numeric)(consoles)
View(isNumeric)
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex]
consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
View(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex]/=consoles$Price
consoles[,colnames(consoles) != "Price" & isNumericIndex]./consoles$Price
consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
View(consoles)
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-min(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
#consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-min(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
View(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
View(isNumeric)
View(consoles)
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-min(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
#colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
#colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
#colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex & colnames(consoles) != "Volume" & colnames(consoles) != "Weight"] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex & colnames(consoles) != "Volume" & colnames(consoles) != "Weight"] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
View(consoles)
library(xlsx)
library(plyr)
consoles <- read.xlsx("Console.xlsx", sheetIndex = 1, as.data.frame = T)
#colnames(consoles)
consoles$Volume = consoles$Width * consoles$Height * consoles$Length
isNumericIndex <- colwise(is.numeric)(consoles)
consoles[,colnames(consoles) != "Price" & isNumericIndex & colnames(consoles) != "Volume" & colnames(consoles) != "Weight"] = consoles[,colnames(consoles) != "Price" & isNumericIndex]/consoles$Price
std_func <- function(x) {
if (is.factor(x)) as.character(x)
else (x-mean(x))/(max(x)-min(x))
}
std_consoles <- colwise(std_func)(consoles)
colnames(std_consoles)[colnames(std_consoles) == "Type."] <- "Type"
std_consoles <- subset(std_consoles, select = -c(Width, Height, Length))
write.csv(std_consoles, file = "Console_Std.csv")
